#:kivy 2.1.0
#: import GLShaderLexer pygments.lexers.GLShaderLexer

#-------------------------------------------------------------------------------
# MIT License
#
# Copyright (c) 2023 Etaluma, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# This open source software was developed for use with Etaluma microscopes.
#
# AUTHORS:
# Kevin Peter Hickerson, The Earthineering Company
# Anna Iwaniec Hickerson, Keck Graduate Institute
# Gerard Decker, The Earthineering Company
#
# MODIFIED:
# April 15, 2023
#-------------------------------------------------------------------------------

# -----------------------
# MAIN DISPLAY
# -----------------------
<MainDisplay>:
    id: maindisplay_id

    # Primary Display of Camera Results
    ShaderViewer:
        id: viewer_id
        pos: 0, 0
        size_hint: None, None
        size: root.width, root.height
        auto_bring_to_front: False
        do_rotation: False
        do_translation: True

	MotionSettings:
        id: motionsettings_id
        size_hint: None, None
        size: self.settings_width, root.height
        pos: -self.settings_width+30, 0

    ImageSettings:
        id: imagesettings_id
        size_hint: None, None
        size: self.settings_width, root.height
        pos: root.width-30, 0


    # Camera Controls
    # ------------------------------
    BoxLayout:
        orientation: 'horizontal'
        padding: '5dp'
        spacing: '5dp'
        pos: (root.width-7*40)/2, 0

        FolderChooseBTN:
            id: live_folder_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/folder.png' # Press to Select Folder
            background_down: './data/icons/folder_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            on_release: self.choose('live_folder')

        ToggleButton:
            id: live_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/pause.png' # Press to Pause Live Stream
            background_down: './data/icons/play.png' # Press to Play Live Stream
            size_hint: None, None
            size: '40dp', '40dp'
            state: 'normal'
            on_release: root.cam_toggle()

        Button:
            id: capture_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/capture.png' # Press to Capture Image
            background_down: './data/icons/capture_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            on_release: root.live_capture()

        ToggleButton:
            id: composite_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/composite.png' # Press to Capture Composite Image
            background_down: './data/icons/composite_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            on_release: root.composite_capture()

        ToggleButton:
            id: record_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/record.png' # Press to Record Live Stream
            background_down: './data/icons/stop.png' # Press to Stop Recording
            size_hint: None, None
            size: '40dp', '40dp'
            on_press: root.record()

        Button:
            id: fit_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/fit.png' # Press to Fit Image to Window
            background_down: './data/icons/fit_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            on_release: root.fit_image()

        Button:
            id: one2one_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/one2one.png' # Press to Scale Image Pixels 1:1 with Screen
            background_down: './data/icons/one2one_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            on_release: root.one2one_image()


# ShaderViewer - Shaded Live Camera view
# ------------------------------------------
<ShaderViewer>:
    ScopeDisplay:
        id: scope_display_id
        size_hint: None, None
        size: root.width, root.height
        allow_stretch: True
        keep_ratio: True

# ShaderEditor - view and edit shader code
# ------------------------------------------
<ShaderEditor>:
    orientation: 'horizontal'
    BoxLayout:
        orientation: 'vertical'
        # Fragment Shader Editor
        Label:
            text: 'Fragment Shader'
            size_hint_y: None
            height: self.texture_size[1] + 10
        CodeInput:
            text: root.fs
            lexer: GLShaderLexer()
            on_text: root.fs = args[1]

        # Vertex Shader Editor
        Label:
            text: 'Vertex Shader'
            size_hint_y: None
            height: self.texture_size[1] + 10
        CodeInput:
            text: root.vs
            lexer: GLShaderLexer()
            on_text: root.vs = args[1]
    ToggleButton:
        id: toggle_editor
        size_hint: None, None
        size: 30, 60
        pos_hint: {"x":0, "y":0.5}
        border: 0, 0, 0, 0
        background_normal: './data/icons/right_arrow_right_arc.png'
        background_down: './data/icons/left_arrow_right_arc.png'
        on_press: root.toggle_editor()

# MotionSettings - view and control motion control Board
# ------------------------------------------
<MotionSettings>:
    orientation: 'horizontal'

	Accordion:
		orientation: 'vertical'

        # MICROSCOPE SETTINGS
        AccordionItem:
            title: 'Microscope Settings'
            collapse: False
            MicroscopeSettings:
                id: microscope_settings_id

        # FOCUS SETTINGS
		AccordionItem:
			title: 'Objective Control'
			VerticalControl:
				id: verticalcontrol_id

        # XY STAGE CONTROL
		AccordionItem:
			title: 'XY Stage Control'
			XYStageControl:
				id: xy_stagecontrol_id

        # PROTOCOL SETTINGS
		AccordionItem:
			title: 'Protocol'
			ProtocolSettings:
                id: protocol_settings_id

		# POST PROCESSING
		AccordionItem:
			title: 'Post Processing'
			PostProcessingAccordion:
                id: post_processing_id

    ToggleButton:
        id: toggle_motionsettings
        size_hint: None, None
        size: 30, 60
        pos_hint: {"x":0, "y":0.5}
        border: 0, 0, 0, 0
        background_normal: './data/icons/right_arrow_right_arc.png' # right pointing (press to open)
        background_down: './data/icons/left_arrow_right_arc.png' # left pointing (press to close)
        on_press: root.toggle_settings()

<VerticalControl>:
	orientation: 'vertical'
	padding: '5dp'
    spacing: '5dp'

    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
		Rectangle:
			size: self.size
			pos: self.pos
	Label:
		text:'Adjust Focus'
		font_size: '16sp'
		size_hint_y: None
		height: '30dp'
		spacing: '5dp'
		color: [51/255, 181/255, 229/255, 1]

	BoxLayout:
		orientation: 'horizontal'
		size_hint_y: None
		height: '170dp'

		BoxLayout:
		    orientation: 'vertical'
		    size_hint_x: None
		    width: '40dp'
		    spacing: '5dp'

		    Label:
		    Button:
		        id: fast_up
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '40dp'
				background_normal: './data/icons/UU_normal.png'
				background_down: './data/icons/UU_down.png'
				on_release: root.coarse_up()
		    Button:
		        id: slow_up
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '30dp'
				background_normal: './data/icons/U_normal.png'
				background_down: './data/icons/U_down.png'
				on_release: root.fine_up()
		    Button:
		        id: slow_down
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '30dp'
				background_normal: './data/icons/D_normal.png'
				background_down: './data/icons/D_down.png'
				on_release: root.fine_down()
		    Button:
		        id: fast_down
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '40dp'
				background_normal: './data/icons/DD_normal.png'
				background_down: './data/icons/DD_down.png'
				on_release: root.coarse_down()
		    Label:

		BoxLayout:
			orientation: 'vertical'
			size_hint_x: None
			width: '40dp'
			Label:
				size_hint_y: None
				height: '15dp'
		    ModSlider:
		        id: obj_position
		        orientation: 'vertical'
		        min: 0.
		        max: 14000.
		        value: 0.
				step: 0.1
		        cursor_size: '30dp','40dp'
		        cursor_image: './data/icons/objective.png'
		        cursor_disabled_image: './data/icons/objective.png'
		        value_track: True
		        value_track_color: 51/255, 181/255, 229/255, 1
		        value_track_width: '5dp'
		        disabled: False
				on_release: root.set_position(self.value)
			Label:
				size_hint_y: None
				height: '15dp'

		BoxLayout:
		    orientation: 'vertical'
		    padding: '5dp'
			spacing: '5dp'

		    Label:
		        size_hint_y: None
		        height: '20dp'
				halign: 'center'
		        font_size: '12sp'
		        text: 'Z-Position (um)'

		    TextInput:
				id: z_position_id
            	multiline: False
		        size_hint_y: None
		        height: '30dp'
		        font_size: '12sp'
				halign: 'center'
            	input_filter: 'float'
		        text: format(obj_position.value, '.2f')
                on_text_validate: root.set_position(self.text)
				on_focus: if not self.focus: root.set_position(self.text)

			BoxLayout:
				orientation:'horizontal'
				padding: '0dp'
				spacing: '5dp'

				Button:
					id: home_id
					size_hint_y: None
					height: '30dp'
					font_size: '12sp'
					text: 'Home'
					on_release: root.home()
				Button:
					text: 'Set Z'
					size_hint_y: None
					height: '30dp'
					font_size: '12sp'
					on_release: root.set_bookmark()
				Button:
					text: 'Set All Z'
					size_hint_y: None
					height: '30dp'
					font_size: '12sp'
					on_release: root.set_all_bookmarks()
			Button:
				text: 'Go to Set Z'
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				on_release: root.goto_bookmark()

    		ToggleButton:
    			id: autofocus_id
    		    size_hint_y: None
    		    height: '30dp'
    			font_size: '12sp'
    			text: 'Autofocus'
    			on_release: root.autofocus()

	Label:
		text:'Turret Selection'
		font_size: '16sp'
		size_hint_y: None
		height: '30dp'
		spacing: '5dp'
		color: [51/255, 181/255, 229/255, 1]

	BoxLayout:
		orientation: 'horizontal'
		size_hint_y: None
		height: '30dp'

		ToggleButton:
			id: turret_pos_1_btn
			text: '1'
            on_release: root.turret_select('1')
		ToggleButton:
			id: turret_pos_2_btn
			text: '2'
            on_release: root.turret_select('2')
		ToggleButton:
			id: turret_pos_3_btn
			text: '3'
            on_release: root.turret_select('3')
		ToggleButton:
			id: turret_pos_4_btn
			text: '4'
            on_release: root.turret_select('4')
            
	ZStack:
		id: zstack_id


# Z-Stack Settings
<ZStack>:
	BoxLayout:
		orientation: 'vertical'
		padding: '5dp'
	    spacing: '5dp'
		pos_hint: {'x': 0.0, 'y': 0.0}

		Label:
			text:'Acquire Z Stack'
			font_size: '16sp'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'
			color: [51/255, 181/255, 229/255, 1]
		BoxLayout:
		    orientation: 'horizontal'
		    size_hint_y: None
		    height: '30dp'
			spacing: '5dp'
			Label:
				font_size: '12sp'
				text: 'Step size (um)'
			Label:
				font_size: '12sp'
				text: 'Range'
			Label:
				font_size: '12sp'
				text: '# of Steps'
		BoxLayout:
		    orientation: 'horizontal'
		    size_hint_y: None
		    height: '30dp'
			spacing: '5dp'

			TextInput:
				id: zstack_stepsize_id
	        	multiline: False
		        size_hint_y: None
		        height: '30dp'
		        font_size: '12sp'
				halign: 'center'
	        	input_filter: 'float'
				text: '0'
	            on_text_validate: root.set_steps()
	            on_focus: if not self.focus: root.set_steps()

			TextInput:
				id: zstack_range_id
	        	multiline: False
		        size_hint_y: None
		        height: '30dp'
		        font_size: '12sp'
				halign: 'center'
	        	input_filter: 'float'
				text: '0'
	            on_text_validate: root.set_steps()
	            on_focus: if not self.focus: root.set_steps()

			TextInput:
				id: zstack_steps_id
	        	multiline: False
		        size_hint_y: None
		        height: '30dp'
		        font_size: '12sp'
				halign: 'center'
	        	input_filter: 'int'
				text: '0'
		        disabled: True

	    Spinner:
			id: zstack_spinner
			sync_height: True
			size_hint_y: None
			height: '30dp'
	        text: 'Z Stack'
			font_size: '12dp'
			text_autoupdate: True
			values: ('Current Position at Top', 'Current Position at Center', 'Current Position at Bottom')
			on_text: root.set_position()
			# values: ('Focus at Top', 'Focus at Center', 'Focus at Bottom', 'Current Position at Top', 'Current Position at Center', 'Current Position at Bottom')

		ToggleButton:
			id: ztack_aqr_btn
			size_hint_y: None
			height: '30dp'
			text: 'Acquire'
			font_size: '12dp'
			on_release: root.aquire_zstack()

		Label:

<XYStageControl>:
	orientation: 'vertical'
	padding: '5dp'
	spacing: '5dp'

    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos

	# HOME and CALIBRATE STAGE
	BoxLayout:
		orientation: 'horizontal'
		size_hint_y: None
		height: '30dp'
		spacing: '5dp'

		# HOME STAGE
		Button: 
			id: home_id
			font_size: '12sp'
			text: 'Home Stage'
			on_release: root.home()
		# Button: 
		# 	id: center_id
		# 	font_size: '12sp'
		# 	text: 'Center Stage'
		# 	on_release: root.center()
		# Button:
		# 	text: 'Calibrate'
		# 	font_size: '12dp'
		# 	on_release: root.calibrate()

	# Two Columns for X and Y Directions
	BoxLayout:
		orientation: 'horizontal'
		spacing: '5dp'
		size_hint_y: None
		height: '170dp'

		# X Direction Controls
		BoxLayout:
			orientation: 'vertical'
			spacing: '5dp'
	
			Label:
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				text: 'X: (mm)'

			# Set and Display X Position	
			TextInput:
				id: x_pos_id
				multiline: False
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				halign: 'center'
				input_filter: 'float'
				text: ''
				on_text_validate: root.set_xposition(self.text)
				on_focus: if not self.focus: root.set_xposition(self.text)
			
			# Set X Bookmark
			Button:
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				text: 'Set X'
				on_release: root.set_xbookmark()

			# Goto X Bookmark
			Button:
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				text: 'Go to X'
				on_release: root.goto_xbookmark()

			# X-Dir Controls
			BoxLayout:
				orientation: 'horizontal'
				spacing: '5dp'
				size_hint_y: None
				height: '30dp'

				Button: # COARSE LEFT
					border: 0, 0, 0, 0
					size_hint: None, None
					size: '30dp', '30dp'
					background_normal: './data/icons/LL_normal.png'
					background_down: './data/icons/LL_down.png'
					on_release: root.coarse_left()

				Button: # FINE LEFT
					id: slow_up
					border: 0, 0, 0, 0
					size_hint: None, None
					size: '25dp', '30dp'
					background_normal: './data/icons/L_normal.png'
					background_down: './data/icons/L_down.png'
					on_release: root.fine_left()

				Button: # FINE RIGHT
					id: slow_down
					border: 0, 0, 0, 0
					size_hint: None, None
					size: '25dp', '30dp'
					background_normal: './data/icons/R_normal.png'
					background_down: './data/icons/R_down.png'
					on_release: root.fine_right()
			
				Button: # COARSE RIGHT
					id: fast_down
					border: 0, 0, 0, 0
					size_hint: None, None
					size: '30dp', '30dp'
					background_normal: './data/icons/RR_normal.png'
					background_down: './data/icons/RR_down.png'
					on_release: root.coarse_right()

		# Y Direction Controls
		BoxLayout:
			orientation: 'vertical'
			spacing: '5dp'

			Label:
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				text: 'Y: (mm)'

			# Set and Display Y Position	
			TextInput:
				id: y_pos_id
				multiline: False
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				halign: 'center'
				input_filter: 'float'
				text: ''
				on_text_validate: root.set_yposition(self.text)
				on_focus: if not self.focus: root.set_yposition(self.text)

			# Set Y Bookmark
			Button:
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				text: 'Set Y'
				on_release: root.set_ybookmark()

			# Goto Y Bookmark
			Button:
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				text: 'Go to Y'
				on_release: root.goto_ybookmark()

			# Y-Dir Controls
			BoxLayout:
				orientation: 'horizontal'
				spacing: '5dp'
				size_hint_y: None
				height: '30dp'

				Button: # COARSE FORWARD
					id: fast_down
					border: 0, 0, 0, 0
					size_hint: None, None
					size: '30dp', ' 30dp'
					background_normal: './data/icons/DD_normal.png'
					background_down: './data/icons/DD_down.png'
					on_release: root.coarse_back()
				Button: # FINE FORWARD
					border: 0, 0, 0, 0
					size_hint: None, None
					size: '25dp', '30dp'
					background_normal: './data/icons/D_normal.png'
					background_down: './data/icons/D_down.png'
					on_release: root.fine_back()
				Button: # FINE BACK
					border: 0, 0, 0, 0
					size_hint: None, None
					size: '25dp', '30dp'
					background_normal: './data/icons/U_normal.png'
					background_down: './data/icons/U_down.png'
					on_release: root.fine_fwd()
				Button: # COARSE BACK
					border: 0, 0, 0, 0
					size_hint: None, None
					size: '30dp', '30dp'
					background_normal: './data/icons/UU_normal.png'
					background_down: './data/icons/UU_down.png'
					on_release: root.coarse_fwd()

	# # Select Labware
	# Spinner:
	# 	id: labware_spinner
	# 	sync_height: True
	# 	text: 'New'
	# 	font_size: '12dp'
	# 	size_hint_y: None
	# 	height: '30dp'
	# 	text_autoupdate: True
	# 	# on_text: root.select_labware()

	# Stage Display
	FloatLayout:
		padding: '5dp'
		size_hint_y: None
		height: self.width * 2 / 3
		Stage:
			id: stage_control_id
			pos_hint:{'center_x':0.5, 'center_y':0.5}	

	# Fill Space		
	Label:	


# ProtocolSettings - Settings for Labware within ImageSettings
# ------------------------------------------
<ProtocolSettings>:
	BoxLayout:
		padding: '5dp'
	    spacing: '5dp'
	    orientation: 'vertical'
		pos_hint: {'x': 0.0, 'y': 0.0}

	    canvas:
	        Color:
	            rgba: 0.1, 0.1, 0.1, 0.7
	        Rectangle:
	            size: self.size
	    		pos: self.pos

		# Time Settings
	    Label:
	        text: 'Time Settings'
			font_size: '16sp'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'
			color: [51/255, 181/255, 229/255, 1]

		# Capture Period
	    BoxLayout:
	        orientation: 'horizontal'
	        size_hint_y: None
	        height: '30dp'
	        Label:
	            text: 'Interval'
	            size_hint_x: None
	            width: '95dp'
				font_size: '12sp'
	        TextInput:
	            id: capture_period
	            multiline: False
			    size_hint_y: None
			    height: '30dp'
	            font_size: '12sp'
	            padding: ['4dp', (self.height-self.line_height)/2]
	            halign: 'right'
	            input_filter: 'float'
	            text: format(5, '.3g')
	            on_text_validate: root.update_period()
	            on_focus: if not self.focus: root.update_period()
	        Label:
	            text: 'minutes'
	            size_hint_x: None
	            width: '95dp'
				font_size: '12sp'

		# Capture Duration
	    BoxLayout:
	        orientation: 'horizontal'
	        size_hint_y: None
	        height: '30dp'
	        Label:
	            text: 'Duration'
	            size_hint_x: None
	            width: '95dp'
				font_size: '12sp'
	        TextInput:
	            id: capture_dur
	            multiline: False
		        size_hint_y: None
		        height: '30dp'
	            font_size: '12sp'
	            padding: ['4dp', (self.height-self.line_height)/2]
	            halign: 'right'
	            input_filter: 'float'
	            text: format(48, '.3g')
	            on_text_validate: root.update_duration()
	            on_focus: if not self.focus: root.update_duration()
	        Label:
	            text: 'hours'
	            size_hint_x: None
	            width: '95dp'
				font_size: '12sp'

		# Protocol Selection
	    Label:
	        text: 'Create New Scan'
			font_size: '16sp'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'
			color: [51/255, 181/255, 229/255, 1]

		# # Select Labware Box
		# BoxLayout:
		# 	orientation: 'horizontal'
	    #     size_hint_y: None
	    #     height: '30dp'
		# 	spacing: '5dp'

		# Select Labware
		Spinner:
			id: labware_spinner
			sync_height: True
			text: 'New'
			font_size: '12dp'
			size_hint_y: None
			height: '30dp'
			text_autoupdate: True
			on_text: root.select_labware()


		# Load and Save Protocol
		BoxLayout:
			orientation: 'horizontal'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'

		    Button:
		        text: 'New'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
		        on_release: root.new_protocol()
	
		    FileChooseBTN:
		        text: 'Load'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
		        on_release: self.choose('load_protocol')

		    Button:
		        text: 'Save'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
				disabled: False
		        on_release: root.save_protocol()

		    FileSaveBTN:
		        text: 'Save As'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
		        on_release: self.choose('saveas_protocol')

		# Stage Display
		FloatLayout:
			padding: '5dp'
			size_hint_y: None
			height: '128dp'
			height: self.width * 2 / 3
			Stage:
				id: stage_widget_id
				pos_hint:{'center_x':0.5, 'center_y':0.5}

		# Protocol Name
		BoxLayout:
			orientation: 'horizontal'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'

			Label:
				text: 'Protocol'
				size_hint_x: None
				width: '75dp'
				font_size: '12sp'

			TextInput:
				id: protocol_filename
				text: ''
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				halign: 'center'
				multiline: False
				disabled: True
				hint_text: 'Protocol Filename'
			

		# Step Name
		BoxLayout:
			orientation: 'horizontal'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'

			Label:
				text: 'Step Name'
				size_hint_x: None
				width: '75dp'
				font_size: '12sp'

			TextInput:
				id: step_name_input
				text: ''
				size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				halign: 'center'
				multiline: False
				hint_text: 'Step Name'

		BoxLayout:
			orientation: 'horizontal'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'
			Label:
				text: 'Step'
				size_hint_x: None
				width: '75dp'
				font_size: '12sp'

		    Button:
				id: prev_step_btn
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '30dp'
				pos_hint: {'center_x': 0.35, 'center_y': 0.5}
				background_normal: './data/icons/L_normal.png'
				background_down: './data/icons/L_down.png'
		        on_release: root.prev_step()
		    TextInput:
				id: step_number_input
		        text: '0'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
				halign: 'center'
            	multiline: False
            	input_filter: 'int'
                on_text_validate: root.go_to_step()
                on_focus: if not self.focus: root.go_to_step()
		    Label:
		        text: 'of'
		        size_hint_x: None
		        width: '20dp'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
		    TextInput:
				id: step_total_input
		        text: '0'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
				halign: 'center'
				disabled: True
		    Button:
				id: next_step_btn
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '30dp'
				pos_hint: {'center_x': 0.65, 'center_y': 0.5}
				background_normal: './data/icons/R_normal.png'
				background_down: './data/icons/R_down.png'
		        on_release: root.next_step()
		
		# Modify individual Steps in Protocol
		BoxLayout:
			orientation: 'horizontal'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'
		    Button:
		        id: delete_step_btn
		        text: 'Delete'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
		        on_release: root.delete_step()
		    Button:
		        id: change_step_btn
		        text: 'Change'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
		        on_release: root.modify_step()
		    Button:
		        id: add_step_btn
		        text: 'Add'
		        size_hint_y: None
		        height: '30dp'
				font_size: '12sp'
				on_release: root.add_step()
		ToggleButton:
			id: run_autofocus_btn
	        text: 'Scan and Autofocus All Steps'
	        size_hint_y: None
	        height: '30dp'
			font_size: '12sp'
			on_release: root.run_autofocus_scan()

		# Run Protocol
	    Label:
	        text: 'Execute Protocol'
			font_size: '16sp'
	        size_hint_y: None
	        height: '30dp'
			spacing: '5dp'
			color: [51/255, 181/255, 229/255, 1]

	    ToggleButton:
	        id: run_scan_btn
	        text: 'Run One Scan'
	        size_hint_y: None
	        height: '30dp'
			font_size: '12sp'
			on_release: root.run_scan()

	    ToggleButton:
	        id: run_protocol_btn
	        text: 'Run Full Protocol'
	        size_hint_y: None
	        height: '30dp'
			font_size: '12sp'
			on_release: root.run_protocol()

		Label:

# PostProcessingAccordion - Settings for PostProcessingAccordion
# ------------------------------------------
<PostProcessingAccordion>:
    padding: '5dp'
    spacing: '5dp'
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
    		pos: self.pos

	FolderChooseBTN:
		text: 'Create AVI'
		size_hint_y: None
		height: '30dp'
		font_size: '12sp'
		on_release: root.convert_to_avi()

	FolderChooseBTN:
		text: 'Stitch'
		size_hint_y: None
		height: '30dp'
		font_size: '12sp'
		on_release:root.stitch()

	Button:
		text:'Open Last Save Folder'
		size_hint_y: None
		height: '30dp'
		font_size: '12sp'
		on_release:root.open_folder()

	Button:
		text:'Cell Count'
		size_hint_y: None
		height: '30dp'
		font_size: '12sp'
		on_release:root.open_cell_count()		

	Label:

<Stage>:
	canvas:
		Line:
			width: 1
			rectangle: (self.x, self.y, self.width, self.height)

# ImageSettings - view and edit control accordion
# ------------------------------------------
<ImageSettings>:
    orientation: 'horizontal'
    ToggleButton:
        id: toggle_imagesettings
        size_hint: None, None
        size: 30, 60
        pos_hint: {"x":0, "y":0.5}
        border: 0, 0, 0, 0
        background_normal: './data/icons/left_arrow_left_arc.png' # left pointing (press to open)
        background_down: './data/icons/right_arrow_left_arc.png' # right pointing (press to close)
        on_press: root.toggle_settings()

    Accordion:
        orientation: 'vertical'
        id: accordion_id

        # BRIGHTFIELD SETTINGS
        AccordionItem:
			id: BF_accordion
            title: 'Brightfield Control'
			on_collapse: root.accordion_collapse()
            LayerControl:
                id: BF
                layer: 'BF'
                bg_color: 0.5, 0.5, 0.5,  1

       # PHASE CONTRAST SETTINGS
        AccordionItem:
			id: PC_accordion
            title: 'Phase Contrast Control'
			on_collapse: root.accordion_collapse()
            LayerControl:
                id: PC
                layer: 'PC'
                bg_color: 0.5, 0.5, 0.5,  1

       # EXTENDED PHASE CONTRAST SETTINGS
        AccordionItem:
			id: EP_accordion
            title: 'Extended Phase Control'
			on_collapse: root.accordion_collapse()
            LayerControl:
                id: EP
                layer: 'EP'
                bg_color: 0.5, 0.5, 0.5,  1

        # BLUE SETTINGS
        AccordionItem:
            id: Blue_accordion
            title: 'Blue Channel Control'
            on_collapse: root.accordion_collapse()
            LayerControl:
                id: Blue
                layer: 'Blue'
                bg_color: 0, .5, 1, 1

        # GREEN SETTINGS
        AccordionItem:
            id: Green_accordion
            title: 'Green Channel Control'
			on_collapse: root.accordion_collapse()
            LayerControl:
                id: Green
                layer: 'Green'
                bg_color: .2, 0.8, 0.2, 1

        # RED SETTINGS
        AccordionItem:
            id: Red_accordion
            title: 'Red Channel Control'
			on_collapse: root.accordion_collapse()
            LayerControl:
                id: Red
                layer: 'Red'
                bg_color: 1, 0.2, 0, 1


# MicroscopeSettings - Settings for  Microscope within ImageSettings
# ------------------------------------------
<MicroscopeSettings>:
    padding: '5dp'
    spacing: '5dp'
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Lumascope Model'
            size_hint_x: None
            width: '120dp'
			font_size: '12sp'
	    Spinner:
			id: scope_spinner
			sync_height: True
	        text: 'Select'
			font_size:'12dp'
			text_autoupdate: True
	        on_release: root.load_scopes()
	        on_text: root.select_scope()

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Objective'
            size_hint_x: None
            width: '120dp'
			font_size: '12sp'
	    Spinner:
			id: objective_spinner
			sync_height: True
	        text: 'Select'
			font_size:'12dp'
			text_autoupdate: True
	        on_release: root.load_ojectives()
	        on_text: root.select_objective()

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Magnification'
            size_hint_x: None
            width: '120dp'
			font_size: '12sp'
        TextInput:
            id: magnification_id
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'center'
            input_filter: 'int'
            text: '40'
			disabled: True
			font_size: '12sp'

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Field of View'
            size_hint_x: None
            width: '120dp'
			font_size: '12sp'
        TextInput:
            id: FOV_id
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'center'
            # input_filter: 'int'
            text: 'tbd'
			disabled: True
			font_size: '12sp'

	# Frame Size
	BoxLayout:
		orientation: 'horizontal'
		size_hint_y: None
		height: '30dp'
		padding: '0dp'
		spacing: '5dp'

		Label:
			text: 'Frame Size'
			halign: 'left'
			valign: 'middle'
			font_size: '12sp'
			size_hint_x: None
			width: '80dp'
			text_size: self.size

		TextInput:
			id: frame_width
			multiline: False
			padding: ['2dp', (self.height-self.line_height)/2]
			halign: 'center'
			input_filter: 'int'
			text: '1900'
			on_text_validate: root.frame_size()
			on_focus: if not self.focus: root.frame_size()
			font_size: '12sp'
		Label:
			text: 'x'
			size_hint_x: None
			width: '15dp'
			font_size: '12sp'
			halign: 'center'
		TextInput:
			id: frame_height
			multiline: False
			padding: ['5dp', (self.height-self.line_height)/2]
			halign: 'center'
			input_filter: 'int'
			text: '1900'
			on_text_validate: root.frame_size()
			on_focus: if not self.focus: root.frame_size()
			font_size: '12sp'

	FileChooseBTN:
		text: 'Load'
		size_hint_y: None
		height: '30dp'
		font_size: '12sp'
		on_release: self.choose('load_settings')
	FileSaveBTN:
		text: 'Save'
		size_hint_y: None
		height: '30dp'
		font_size: '12sp'
		on_release: self.choose('save_settings')

	Label:

# LayerControl - Settings for Layers within ImageSettings
# ------------------------------------------
<LayerControl>:
    padding: '10dp'
    spacing: '5dp'
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos
  

	ScrollView:
		scroll_type: ['bars']
		do_scroll_x: False
		BoxLayout:
			orientation: 'vertical'
			size_hint_y: None
			height: self.minimum_height
			padding: 0, 0, dp(8), 0
			spacing: dp(5)
			
			# Illumination
			Label:
				canvas:
					Color:
						rgba: root.bg_color
					Rectangle:
						size: self.width, 1
						pos: self.x, self.y+self.height

				text:'Illumination'
				font_size: '16sp'
				size_hint_y: None
				height: '30dp'
				# spacing: '5dp'
				color: root.bg_color

			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: None
				height: '30dp'
				padding: '0dp'
				spacing: '5dp'

				Label:
					id: LED_label
					font_size: '12sp'
					text: 'Enable LED'
					halign: 'left'
					valign: 'middle'
					text_size: self.size
				ToggleButton:
					id: apply_btn
					size_hint: None, None
					size: '45dp', '30dp'
					border: 0, 0, 0, 0
					valign: 'middle'
					background_normal: './data/icons/ToggleL.png'
					background_down: './data/icons/ToggleR.png'
					on_release: root.apply_settings()

			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: None
				height: '30dp'
				padding: '0dp'
				spacing: '5dp'

				Label:
					text: 'Illumination (mA)'
					halign: 'left'
					valign: 'middle'
					font_size: '12sp'
					size_hint_x: None
					width: '95dp'
					text_size: self.size
				ModSlider:
					id: ill_slider
					min: 0.
					max: 500.
					value: 100.
					step: 5.
					cursor_size: '20dp','20dp'
					cursor_image: './data/icons/slider_cursor.png'
					value_track: True
					value_track_color: root.bg_color
					value_track_width: 5
					on_release: root.ill_slider() # on_touch_move # on_release
				TextInput:
					id: ill_text
					size_hint_x: None
					width: '45dp'
					multiline: False
					font_size: '12sp'
					padding: ['4dp', (self.height-self.line_height)/2]
					halign: 'right'
					input_filter: 'float'
					text: format(ill_slider.value, '.3g')
					on_text_validate: root.ill_text()
					on_focus: if not self.focus: root.ill_text()

			# Camera
			Label:
				canvas:
					Color:
						rgba: root.bg_color
					Rectangle:
						size: self.width, 1
						pos: self.x, self.y+self.height
				text:'Camera'
				font_size: '16sp'
				size_hint_y: None
				height: '30dp'
				# spacing: '5dp'
				color: root.bg_color

			# Gain
			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: None
				height: '30dp'
				padding: '0dp'
				spacing: '5dp'

				Label:
					text: 'Gain (dB)'
					halign: 'left'
					valign: 'middle'
					font_size: '12sp'
					size_hint_x: None
					width: '50dp'
					text_size: self.size
				CheckBox:
					id: auto_gain
					size_hint_x: None
					width: '25dp'
					active: False
					on_release: root.auto_gain()
				ModSlider:
					id: gain_slider # 0 to 48, default 0, based on camera limits
					min: 0.
					max: 48.
					value: 0.
					step: 0.1
					cursor_size: '20dp','20dp'
					cursor_image: './data/icons/slider_cursor.png'
					value_track: True
					value_track_color: root.bg_color
					value_track_width: 5
					on_release: root.gain_slider()
				TextInput:
					id: gain_text
					size_hint_x: None
					width: '45dp'
					multiline: False
					font_size: '12sp'
					padding: ['4dp', (self.height-self.line_height)/2]
					halign: 'right'
					input_filter: 'float'
					text: format(gain_slider.value, '.3g')
					on_text_validate: root.gain_text()
					on_focus: if not self.focus: root.gain_text()

			# Exposure
			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: None
				height: '30dp'
				padding: '0dp'
				spacing: '5dp'

				Label:
					text: 'Exposure (ms)'
					halign: 'left'
					valign: 'middle'
					font_size: '12sp'
					size_hint_x: None
					width: '80dp'
					text_size: self.size
				ModSlider:
					id: exp_slider
					min: 0.01
					max: 200. # values are in ms
					value: 100.
					step: 0.01
					# # This was to create a log scale
					# min: -2. # minimum allowable by camera 10.0 us = 0.01 ms -> 10^-2 log-10 scale
					# max: 3. # maximum, allowable by camera 1000000.0 us = 1000.0 ms -> 10^3 -> 10^-2 log-10 scale
					# value: 2. # 10^2 -> 100 ms exposure
					# step: 0.01
					cursor_size: '20dp','20dp'
					cursor_image: './data/icons/slider_cursor.png'
					track_width: 5
					value_track: True
					value_track_color: root.bg_color
					value_track_width: 5
					on_release: root.exp_slider()
				TextInput:
					id: exp_text
					size_hint_x: None
					width: '45dp'
					multiline: False
					font_size: '12sp'
					padding: ['4dp', (self.height-self.line_height)/2]
					halign: 'right'
					input_filter: 'float'
					text: format(exp_slider.value, '.4g')
					# text: format(10 ** exp_slider.value, '.3g')
					on_text_validate: root.exp_text()
					on_focus: if not self.focus: root.exp_text()


			# Focus
			Label:
				canvas:
					Color:
						rgba: root.bg_color
					Rectangle:
						size: self.width, 1
						pos: self.x, self.y+self.height
				text:'Focus'
				font_size: '16sp'
				size_hint_y: None
				height: '30dp'
				color: root.bg_color
			
			# Focus Settings
			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: None
				height: '30dp'
				padding: '0dp'
				spacing: '5dp'

				Button:
					size_hint_y: None
					height: '30dp'
					font_size: '12sp'
					text: 'Save Focus'
					on_release: root.save_focus()
				Button:
					size_hint_y: None
					height: '30dp'
					font_size: '12sp'
					text: 'Go to Focus'
					on_release: root.goto_focus()

			# Display Properties
			Label:
				canvas:
					Color:
						rgba: root.bg_color
					Rectangle:
						size: self.width, 1
						pos: self.x, self.y+self.height
				text:'Display Properties'
				font_size: '16sp'
				size_hint_y: None
				height: '30dp'
				color: root.bg_color

			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: None
				height: '30dp'
				padding: '0dp'
				spacing: '5dp'

				CheckBox:
					id: false_color
					size_hint_x: None
					width: '30dp'
					active: True
					on_release: root.false_color()
				Label:		
					id: false_color_label
					font_size: '12sp'
					text: 'False Color'
					halign: 'left'
					valign: 'middle'
					text_size: self.size
				CheckBox:
					id: logHistogram_id
					size_hint_x: None
					width: '30dp'
					active: True
					state: 'normal'
				Label:
					text: 'Log'
					font_size: '12sp'
					halign: 'left'
					valign: 'middle'
					text_size: self.size
				
			FloatLayout:
				padding: '0dp'
				spacing: '5dp'
				size_hint_y: None
				height: '128dp'

				Histogram:
					id: histo_id
					pos_hint:{'center_x':0.5, 'center_y':0.5}
					bg_color: root.bg_color
					layer: root.layer

			# Protocol Settings
			Label:
				canvas:
					Color:
						rgba: root.bg_color
					Rectangle:
						size: self.width, 1
						pos: self.x, self.y+self.height
				text:'Protocol Settings'
				font_size: '16sp'
				size_hint_y: None
				height: '30dp'
				color: root.bg_color

			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: None
				height: '30dp'
				padding: '0dp'
				spacing: '5dp'

				CheckBox:
					id: autofocus
					size_hint_x: None
					width: '30dp'
					active: True
					on_release: root.update_autofocus()
				Label:
					text: 'Auto Focus'
					font_size: '12sp'
					halign: 'left'
					valign: 'middle'
					text_size: self.size
				CheckBox:
					id: acquire
					size_hint_x: None
					width: '30dp'
					active: True
					on_release: root.update_acquire()
				Label:
					text: 'Acquire'
					font_size: '12sp'
					halign: 'left'
					valign: 'middle'
					text_size: self.size

			BoxLayout:
				orientation: 'horizontal'
				size_hint_y: None
				height: '30dp'
				spacing: '5dp'
				FolderChooseBTN:
					id: folder_btn
					# size_hint_y: None
					# height: '30dp'
					# font_size: '12sp'
					# text: 'Folder'
					border: 0, 0, 0, 0
					background_normal: './data/icons/folder.png' # Press to Select Folder
					background_down: './data/icons/folder_down.png'
					size_hint: None, None
					size: '30dp', '30dp'
					on_release: self.choose(root.layer)
				TextInput:
					id: root_text
					# size_hint_y: None
					# height: '30dp'
					font_size: '12sp'
					multiline: False
					text: 'File Root'
					padding: ['5dp', (self.height-self.line_height)/2]
					on_text: root.root_text()
					hint_text: 'Filename Root'

			Label:

<Histogram>:
	canvas:
		Color:
			rgba: root.bg_color
		Line:
			width: 1
			rectangle: (self.x, self.y, self.width, self.height)

<CellCountPopup>:
	orientation: 'horizontal'

	# Controls
	BoxLayout: 
		orientation: 'vertical'
		size_hint_x: 0.25

		# Select image to load
		FileChooseBTN:
			text: 'Load Image'
			size_hint_y: None
			height: '30dp'
			font_size: '12sp'
			on_release: self.choose('load_cell_count_input_image')

		# Enable fluorescence mode
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: '40dp'
			size_hint_x: 1
			CheckBox:
				id: cell_count_fluorescent_mode_id
				size_hint_x: None
				width: '40dp'
				active: True
				on_release: root.flourescent_mode_toggle()
			
			Label:
				text: 'Fluorescent Image'
				size_hint_x: None
				width: '100dp'
				font_size: '12sp'
				halign: 'left'
		
		BoxLayout: # Slider Controls
			orientation: 'vertical'
			size_hint_y: None
			height: '100dp'

			# Threshold slider
			BoxLayout:
				orientation: 'horizontal'

				Label:
					text: 'Threshold'
					size_hint_x: None
					width: '70dp'
					font_size: '12sp'
				
				ModSlider:
					id: slider_cell_count_threshold_id
					min: 0
					max: 100
					step: 1
					orientation: 'horizontal'
					on_release: root.slider_adjustment_threshold()
				Label:
					text: str(int(slider_cell_count_threshold_id.value))
					width: '60dp'
					font_size: '12sp'

			# Size slider
			BoxLayout:
				orientation: 'horizontal'

				Label:
					text: 'Size'
					size_hint_x: None
					width: '70dp'
					font_size: '12sp'
				
				RangeSlider:
					id: slider_cell_count_size_range_id
					min: 0
					max: 50000
					step: 500
					orientation: 'horizontal'
					value1: 500
					value2: 25000
					on_touch_up: root.slider_adjustment_size()
				Label:
					id: label_cell_count_size_range_id
					text: f"{int(slider_cell_count_size_range_id.value[0])}-{int(slider_cell_count_size_range_id.value[1])}"
					width: '60dp'
					font_size: '12sp'

		# Save method
		FileSaveBTN:
			text: 'Save Method As...'
			size_hint_y: None
			height: '30dp'
			font_size: '12sp'
			on_release: self.choose('saveas_cell_count_method')

		
		# Select method to load
		FileChooseBTN:
			text: 'Load Method'
			size_hint_y: None
			height: '30dp'
			font_size: '12sp'
			on_release: self.choose('load_cell_count_method')

		# Apply method
		FolderChooseBTN:
			text: 'Apply Method to Folder'
			size_hint_y: None
			height: '30dp'
			font_size: '12sp'
			on_release: self.choose('apply_cell_count_method_to_folder')

		# Empty widget to consume space at bottom of controls panel
		Widget:

	# Image area
	BoxLayout: 
		orientation: 'vertical'
		size_hint_y: 1
		canvas:
			Color:
				rgba: 0,0,0,0
		Image:
			id: cell_count_image_id
			source: ""
			canvas:
				Color:
					rgba: 0,0,0,0

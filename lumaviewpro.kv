#: import GLShaderLexer pygments.lexers.GLShaderLexer

#-------------------------------------------------------------------------------
# MIT License
#
# Copyright (c) 2020 Etaluma, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# This open source software was developed for use with Etaluma microscopes.
#
# AUTHORS:
# Kevin Peter Hickerson, The Earthineering Company
# Anna Iwaniec Hickerson, Keck Graduate Institute
#
# MODIFIED:
# April 12, 2021
#-------------------------------------------------------------------------------

# -----------------------
# MAIN DISPLAY
# -----------------------
<MainDisplay>:
    id: maindisplay_id

    # Primary Display of Camera Results
    ShaderViewer:
        id: viewer_id
        pos: 0, 0
        size_hint: None, None
        size: root.width, root.height
        auto_bring_to_front: False
        do_rotation: False
        do_translation: True

    # ShaderEditor:
    #     viewer: viewer_id
    #     size_hint: None, None
    #     size: 300, root.height
    #     pos: -285, 0
    #
    MainSettings:
        id: mainsettings_id
        size_hint: None, None
        size: self.settings_width, root.height
        pos: root.width-15, 0

    # Camera Controls
    # ------------------------------
    BoxLayout:
        orientation: 'horizontal'
        padding: '5dp'
        spacing: '5dp'
        # pos: root.width/2-200, 0
        pos: 0, 0
        Button:
            id: live_folder_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/folder.png' # Press to Select Folder
            background_down: './data/icons/folder_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # on_press:
        ToggleButton:
            id: live_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/pause.png' # Press to Pause Live Stream
            background_down: './data/icons/play.png' # Press to Play Live Stream
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Pause Stream'
            state: 'normal'
            on_press: root.cam_toggle()
        Button:
            id: capture_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/capture.png' # Press to Capture Image
            background_down: './data/icons/capture_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Capture Image'
            on_press: root.capture(0)
        Button:
            id: composite_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/composite.png' # Press to Capture Composite Image
            background_down: './data/icons/composite_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Composite'
            on_press: root.composite(0)
        ToggleButton:
            id: record_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/record.png' # Press to Record Live Stream
            background_down: './data/icons/stop.png' # Press to Stop Recording
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Record Video'
            on_press: root.record()
        Button:
            id: fit_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/fit.png' # Press to Fit Image to Window
            background_down: './data/icons/fit_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Fit'
            on_press: root.fit_image()
        Button:
            id: one2one_btn
            border: 0, 0, 0, 0
            background_normal: './data/icons/one2one.png' # Press to Scale Image Pixels 1:1 with Screen
            background_down: './data/icons/one2one_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # text: '1:1'
            on_press: root.one2one_image()

# ShaderViewer - Shaded Live Camera view
# ------------------------------------------
<ShaderViewer>:
    PylonCamera:
        id: microscope_camera
        size_hint: None, None
        size: root.width, root.height
        resolution: (2592, 1944)
        allow_stretch: True
        keep_ratio: True

# ShaderEditor - view and edit shader code
# ------------------------------------------
<ShaderEditor>:
    orientation: 'horizontal'
    BoxLayout:
        orientation: 'vertical'
        # Fragment Shader Editor
        Label:
            text: 'Fragment Shader'
            size_hint_y: None
            height: self.texture_size[1] + 10
        CodeInput:
            text: root.fs
            lexer: GLShaderLexer()
            on_text: root.fs = args[1]

        # Vertex Shader Editor
        Label:
            text: 'Vertex Shader'
            size_hint_y: None
            height: self.texture_size[1] + 10
        CodeInput:
            text: root.vs
            lexer: GLShaderLexer()
            on_text: root.vs = args[1]
    ToggleButton:
        id: toggle_editor
        size_hint: None, None
        size: 15, 50
        pos_hint: {"x":0, "y":0.5}
        border: 0, 0, 0, 0
        background_normal: './data/right_arrow.png'
        background_down: './data/left_arrow.png'
        on_press: root.toggle_editor()

# MainSettings - view and edit control accordian
# ------------------------------------------
<MainSettings>:
    orientation: 'horizontal'
    ToggleButton:
        id: toggle_mainsettings
        size_hint: None, None
        size: 15, 50
        pos_hint: {"x":0, "y":0.5}
        border: 0, 0, 0, 0
        background_normal: './data/left_arrow.png' # left pointing (press to open)
        background_down: './data/right_arrow.png' # right pointing (press to close)
        on_press: root.toggle_settings()

    Accordion:
        orientation: 'vertical'
        id: accordion_id
        # MICROSCOPE SETTINGS
        AccordionItem:
            title: 'Microscope Settings'
            collapse: False
            MicroscopeSettings:
                id: microscope_settings_id

        # BRIGHTFIELD SETTINGS
        AccordionItem:
            title: 'Brightfield Channel'
            LayerControl:
                id: BF
                layer: 'BF'
                bg_color: 0.3, 0.3, 0.3,  1

        # BLUE SETTINGS
        AccordionItem:
            title: 'Blue Channel Control'
            LayerControl:
                id: Blue
                layer: 'Blue'
                bg_color: 0, .5, 1, 1

        # GREEN SETTINGS
        AccordionItem:
            title: 'Green Channel Control'
            LayerControl:
                id: Green
                layer: 'Green'
                bg_color: .2, 0.8, 0.2, 1

        # RED SETTINGS
        AccordionItem:
            title: 'Red Channel Control'
            LayerControl:
                id: Red
                layer: 'Red'
                bg_color: 1, 0.2, 0, 1

        # TIME LAPSE SETTINGS
        AccordionItem:
            title: 'Time Lapse Protocol'
            TimeLapseSettings:
                id: time_lapse_id

# MicroscopeDropDown - Drop down list for microscope selection
# Used within ScopeSelection
# ------------------------------------------------------------
<MicroscopeDropDown>:
	Button:
		text: 'LS460'
		font_size: '14sp'
		size_hint_y: None
		height: '40dp'
		on_release: root.select('LS460')
	Button:
		text: 'LS560'
		font_size: '14sp'
		size_hint_y: None
		height: '40dp'
		on_release: root.select('LS560')
	Button:
		text: 'LS620'
		font_size: '14sp'
		size_hint_y: None
		height: '40dp'
		on_release: root.select('LS620')
	Button:
		text: 'LS720'
		font_size: '14sp'
		size_hint_y: None
		height: '40dp'
		on_release: root.select('LS720')

# ObjectiveDropDown - Drop down list for objective selection
# Used within ScopeSelection
# ----------------------------------------------------------
<ObjectiveDropDown>:
	Button:
		text: 'Objective A'
		font_size: '14sp'
		size_hint_y: None
		height: '40dp'
		on_release: root.select('Objective A')
	Button:
		text: 'Objective B'
		font_size: '14sp'
		size_hint_y: None
		height: '40dp'
		on_release: root.select('Objective B')
	Button:
		text: 'Canon 55mm'
		font_size: '14sp'
		size_hint_y: None
		height: '40dp'
		on_release: root.select('Canon 55mm')

# MicroscopeSettings - Settings for  Microscope within MainSettings
# ------------------------------------------
<MicroscopeSettings>:
    padding: 5
    spacing: 5
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos

	ScopeSelect:
		id: select_scope_btn
		orientation: 'horizontal'
		size_hint_y: None
		height: '40dp'

	ObjectiveSelect:
		id: select_obj_btn
		orientation: 'horizontal'
		size_hint_y: None
		height: '40dp'

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '40dp'
        Label:
            text: 'Frame Size'
            size_hint_x: None
            width: '150dp'
			font_size: '14sp'
        TextInput:
            id: frame_width
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'left'
            input_filter: 'int'
            text: '2592'
            on_text_validate: root.frame_size()
			font_size: '14sp'
        Label:
            text: 'x'
            size_hint_x: None
            width: '15dp'
			font_size: '14sp'
			halign: 'center'
        TextInput:
            id: frame_height
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'left'
            input_filter: 'int'
            text: '1944'
            on_text_validate: root.frame_size()
			font_size: '14sp'
    Image:
        id: image_of_microscope
        source: './data/LS620.png'



# LayerControl - Settings for Layers within MainSettings
# ------------------------------------------
<LayerControl>:
    padding: 5
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos

    BoxLayout:
        orientation: 'vertical'
        size_hint_y: None
        height: dp(30*6+10*5)
        spacing: '10dp'
        # Illumination
        BoxLayout:
            orientation: 'horizontal'
            Label:
                text: 'Illumination (mA)'
                halign: 'center'
                valign: 'middle'
                font_size: '14sp'
                size_hint_x: None
                width: '100dp'
            Slider:
                id: ill_slider
                min: 0.
                max: 600.
                value: 100.
                cursor_size: '20dp','20dp'
                cursor_image: './data/slider_cursor.png'
                value_track: True
                value_track_color: root.bg_color
                value_track_width: 5
                on_touch_up: root.ill_slider()
            TextInput:
                id: ill_text
                size_hint_x: None
                width: '40dp'
                multiline: False
                font_size: '12sp'
                padding: ['4dp', (self.height-self.line_height)/2]
                halign: 'right'
                input_filter: 'int'
                text:"%.1f" % ill_slider.value
                on_text: root.ill_text()
        # Gain
        BoxLayout:
            orientation: 'horizontal'
            Label:
                text: 'Gain (dB)'
                halign: 'center'
                valign: 'middle'
                font_size: '14sp'
                size_hint_x: None
                width: '100dp'
            Slider:
                id: gain_slider # 0 to 24, default 0, based on camera limits
                min: 0.
                max: 24.
                value: 0.
                cursor_size: '20dp','20dp'
                cursor_image: './data/slider_cursor.png'
                value_track: True
                value_track_color: root.bg_color
                value_track_width: 5
                on_touch_up: root.gain_slider()
            TextInput:
                id: gain_text
                size_hint_x: None
                width: '40dp'
                multiline: False
                font_size: '12sp'
                padding: ['4dp', (self.height-self.line_height)/2]
                halign: 'right'
                input_filter: 'float'
                text:"%.1f" % gain_slider.value
                on_text: root.gain_text()
        # Exposure
        BoxLayout:
            orientation: 'horizontal'
            Label:
                text: 'Exposure (ms)'
                halign: 'center'
                valign: 'middle'
                font_size: '14sp'
                size_hint_x: None
                width: '100dp'
            Slider:
                id: exp_slider # 2e-5 to 60, default .005
                min: 0.01 # minimum allowable by camera 10.0 us = 0.01 ms
                max: 1000 # maximum, allowable by camera 1000000.0 us = 1000.0 ms
                value: 200
                cursor_size: '20dp','20dp'
                cursor_image: './data/slider_cursor.png'
                value_track: True
                value_track_color: root.bg_color
                value_track_width: 5
                on_touch_up: root.exp_slider()
            TextInput:
                id: exp_text
                size_hint_x: None
                width: '40dp'
                multiline: False
                font_size: '12sp'
                padding: ['4dp', (self.height-self.line_height)/2]
                halign: 'right'
                input_filter: 'int'
                text: "%.1f" % exp_slider.value
                on_text: root.exp_text()

        # File Save Settings
        Button:
            id: folder_btn
            text: 'Folder'
            on_press: root.choose_folder()
        TextInput:
            id: root_text
            multiline: False
            text: 'File Root'
            padding: ['5dp', (self.height-self.line_height)/2]
            on_text: root.root_text()

        # bulk settings
        BoxLayout:
            orientation: 'horizontal'
            padding: 0
            ToggleButton:
                id: apply_btn
                text: 'ON'
                halign: 'center'
                valign: 'middle'
                on_release: root.apply_settings()
            Label:
                id: false_color_label
                text: 'Colorize'
                halign: 'center'
                valign: 'middle'
            CheckBox:
                id: false_color
                size_hint_x: None
                width: '30dp'
                active: True
                on_release: root.false_color()
            Label:
                text: 'Acquire'
                halign: 'center'
                valign: 'middle'
            CheckBox:
                id: acquire
                size_hint_x: None
                width: '30dp'
                active: True
                on_release: root.update_acquire()
    BoxLayout:
        orientation: 'vertical'

# TimeLapseSettings - Settings for Time Lapse within MainSettings
# ------------------------------------------
<TimeLapseSettings>:
    padding: 5
    spacing: 5
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '40dp'
        Label:
            text: 'Capture Period'
            size_hint_x: None
            width: '150dp'
			font_size: '14sp'
        TextInput:
            id: capture_period
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'right'
            input_filter: 'float'
            text: '5'
			font_size: '14sp'
            on_text: root.update_period()
        Label:
            text: 'min'
            size_hint_x: None
            width: '75dp'
			font_size: '14sp'

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '40dp'
        Label:
            text: 'Capture Duration'
            size_hint_x: None
            width: '150dp'
			font_size: '14sp'
        TextInput:
            id: capture_dur
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'right'
            input_filter: 'float'
            text: '48'
            on_text: root.update_duration()
        Label:
            text: 'hrs'
            size_hint_x: None
            width: '75dp'
			font_size: '14sp'
    Button:
        text: 'Load Protocol'
        size_hint_y: None
        height: '40dp'
        on_press: root.load_protocol()
    Button:
        text: 'Save Protocol'
        size_hint_y: None
        height: '40dp'
        on_press: root.save_protocol()
    ToggleButton:
        id: protocol_btn
        text: 'Run Protocol'
        size_hint_y: None
        height: '40dp'
        on_press: root.run_protocol()
    # Button:
    #     id: movie_btn
    #     size_hint_y: None
    #     height: 40
    #     text: 'Convert to AVI'
    #     on_release: root.convert_to_avi()
    BoxLayout:

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
        BoxLayout:
            size_hint_y: None
            height: '40dp'
            Button:
                text: "Cancel"
                on_release: root.cancel()
            Button:
                text: "Select"
                on_release: root.load(filechooser.path)

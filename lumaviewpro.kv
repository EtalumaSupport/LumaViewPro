#: import GLShaderLexer pygments.lexers.GLShaderLexer

#-------------------------------------------------------------------------------
# MIT License
#
# Copyright (c) 2020 Etaluma, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# This open source software was developed for use with Etaluma microscopes.
#
# AUTHORS:
# Kevin Peter Hickerson, The Earthineering Company
# Anna Iwaniec Hickerson, Keck Graduate Institute
#
# MODIFIED:
# July 2021
#-------------------------------------------------------------------------------

# -----------------------
# TOOLTIPS
# -----------------------
<TooltipViewClass>:
	size_hint: None, None
	width: self.minimum_width
	height: self.minimum_height + root.padding[1]
	opacity: 0

	canvas.before:
		PushMatrix
		Color:
			rgba: root.tooltip_bg_color
		RoundedRectangle:
			pos: self.pos
			size: self.size
			radius: root.tooltip_radius
		Scale:
			origin: self.center
			x: root._scale_x
			y: root._scale_y
	canvas.after:
		PopMatrix

	Label:
		id: label_tooltip
		text: root.tooltip_text
		size_hint: None, None
		size: self.texture_size
		pos_hint: {'center_y': 0.5}


# -----------------------
# MAIN DISPLAY
# -----------------------
<MainDisplay>:
    id: maindisplay_id

    # Primary Display of Camera Results
    ShaderViewer:
        id: viewer_id
        pos: 0, 0
        size_hint: None, None
        size: root.width, root.height
        auto_bring_to_front: False
        do_rotation: False
        do_translation: True

	MotionSettings:
        id: motionsettings_id
        size_hint: None, None
        size: self.settings_width, root.height
        pos: -self.settings_width+30, 0

    # ShaderEditor:
    #     viewer: viewer_id
    #     size_hint: None, None
    #     size: 300, root.height
    #     pos: -285, 0
    #

    MainSettings:
        id: mainsettings_id
        size_hint: None, None
        size: self.settings_width, root.height
        pos: root.width-30, 0

    # Camera Controls
    # ------------------------------
    BoxLayout:
        orientation: 'horizontal'
        padding: '5dp'
        spacing: '5dp'
        pos: (root.width-7*40)/2, 0
        # pos: 0, 0
        TooltipButton:
            id: live_folder_btn
            border: 0, 0, 0, 0
            background_normal: './data/folder.png' # Press to Select Folder
            background_down: './data/folder_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            on_press: root.choose_folder()
			tooltip_text: "Select save folder"
        TooltipToggleButton:
            id: live_btn
            border: 0, 0, 0, 0
            background_normal: './data/pause.png' # Press to Pause Live Stream
            background_down: './data/play.png' # Press to Play Live Stream
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Pause Stream'
            state: 'normal'
            on_press: root.cam_toggle()
			tooltip_text: "Pause/play live stream"
        TooltipButton:
            id: capture_btn
            border: 0, 0, 0, 0
            background_normal: './data/capture.png' # Press to Capture Image
            background_down: './data/capture_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Capture Image'
            on_press: root.capture(0)
			tooltip_text: "Capture image"
        TooltipButton:
            id: composite_btn
            border: 0, 0, 0, 0
            background_normal: './data/composite.png' # Press to Capture Composite Image
            background_down: './data/composite_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Composite'
            on_press: root.composite(0)
			tooltip_text: "Capture composite image"
        TooltipToggleButton:
            id: record_btn
            border: 0, 0, 0, 0
            background_normal: './data/record.png' # Press to Record Live Stream
            background_down: './data/stop.png' # Press to Stop Recording
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Record Video'
            on_press: root.record()
			tooltip_text:  "Start/stop recording"
        TooltipButton:
            id: fit_btn
            border: 0, 0, 0, 0
            background_normal: './data/fit.png' # Press to Fit Image to Window
            background_down: './data/fit_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # text: 'Fit'
            on_press: root.fit_image()
			tooltip_text: "Fit image to window"
        TooltipButton:
            id: one2one_btn
            border: 0, 0, 0, 0
            background_normal: './data/one2one.png' # Press to Scale Image Pixels 1:1 with Screen
            background_down: './data/one2one_down.png'
            size_hint: None, None
            size: '40dp', '40dp'
            # text: '1:1'
            on_press: root.one2one_image()
			tooltip_text: "Scale 1:1"

# ShaderViewer - Shaded Live Camera view
# ------------------------------------------
<ShaderViewer>:
    PylonCamera:
        id: microscope_camera
        size_hint: None, None
        size: root.width, root.height
        resolution: (1900, 1900)
        allow_stretch: True
        keep_ratio: True

# ShaderEditor - view and edit shader code
# ------------------------------------------
<ShaderEditor>:
    orientation: 'horizontal'
    BoxLayout:
        orientation: 'vertical'
        # Fragment Shader Editor
        Label:
            text: 'Fragment Shader'
            size_hint_y: None
            height: self.texture_size[1] + 10
        CodeInput:
            text: root.fs
            lexer: GLShaderLexer()
            on_text: root.fs = args[1]

        # Vertex Shader Editor
        Label:
            text: 'Vertex Shader'
            size_hint_y: None
            height: self.texture_size[1] + 10
        CodeInput:
            text: root.vs
            lexer: GLShaderLexer()
            on_text: root.vs = args[1]
    ToggleButton:
        id: toggle_editor
        size_hint: None, None
        size: 30, 60
        pos_hint: {"x":0, "y":0.5}
        border: 0, 0, 0, 0
        background_normal: './data/right_arrow_right_arc.png'
        background_down: './data/left_arrow_right_arc.png'
        on_press: root.toggle_editor()

# MotionSettings - view and control motion control Board
# ------------------------------------------
<MotionSettings>:
    orientation: 'horizontal'

	Accordion:
		orientation: 'vertical'
		AccordionItem:
			title: 'Focus'
            collapse: False
			VerticalControl:
				id: verticalcontrol_id
		AccordionItem:
			title: 'XY Stage Control'
			XYStageControl:
				id: xy_stagecontrol_id

    ToggleButton:
        id: toggle_motionsettings
        size_hint: None, None
        size: 30, 60
        pos_hint: {"x":0, "y":0.5}
        border: 0, 0, 0, 0
        background_normal: './data/right_arrow_right_arc.png' # right pointing (press to open)
        background_down: './data/left_arrow_right_arc.png' # left pointing (press to close)
        on_press: root.toggle_settings()


<VerticalControl>:
	orientation: 'vertical'
	padding: '5dp'
    spacing: '5dp'

    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos
	BoxLayout:
		orientation: 'horizontal'
		size_hint_y: None
		height: '180dp'
		BoxLayout:
		    orientation: 'vertical'
		    size_hint_x: None
		    width: '40dp'
		    # padding: '5dp'
		    spacing: '5dp'
		    Label:
		    Button:
		        id: fast_up
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '40dp'
				background_normal: './data/UU_normal.png'
				background_down: './data/UU_down.png'
				on_press: root.course_up()
		    Button:
		        id: slow_up
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '30dp'
				background_normal: './data/U_normal.png'
				background_down: './data/U_down.png'
				on_press: root.fine_up()
		    Button:
		        id: slow_down
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '30dp'
				background_normal: './data/D_normal.png'
				background_down: './data/D_down.png'
				on_press: root.fine_down()
		    Button:
		        id: fast_down
				border: 0, 0, 0, 0
		        size_hint: None, None
		        size: '30dp', '40dp'
				background_normal: './data/DD_normal.png'
				background_down: './data/DD_down.png'
				on_press: root.course_down()
		    Label:
		BoxLayout:
			orientation: 'vertical'
			size_hint_x: None
			width: '40dp'
			Label:
				size_hint_y: None
				height: '15dp'
		    ModSlider:
		        id: obj_position
		        orientation: 'vertical'
		        min: 0.
		        max: 12000.
		        value: 0.
				step: 0.01
		        cursor_size: '30dp','40dp'
		        cursor_image: './data/objective.png'
		        cursor_disabled_image: './data/objective.png'
		        value_track: True
		        value_track_color: 51/255, 181/255, 229/255, 1
		        value_track_width: '5dp'
		        disabled: False
				on_release: root.set_position(self.value)
			Label:
				size_hint_y: None
				height: '15dp'

		BoxLayout:
		    orientation: 'vertical'
		    padding: '5dp'
			spacing: '5dp'
			Label:
		    Label:
		        size_hint_y: None
		        height: '15dp'
				halign: 'center'
		        font_size: '12sp'
		        text: 'Z-Position'
		    Label:
		        size_hint_y: None
		        height: '15dp'
				halign: 'center'
		        font_size: '12sp'
		        text: 'Target (um)'
		    TextInput:
				id: set_position_id
            	multiline: False
		        size_hint_y: None
		        height: '30dp'
		        font_size: '12sp'
				halign: 'center'
            	input_filter: 'float'
		        text: format(obj_position.value, '.2f')
                on_text_validate: root.set_position(self.text)
			Label:
		        size_hint_y: None
		        height: '10dp'
		    Label:
		        size_hint_y: None
		        height: '15dp'
				halign: 'center'
		        font_size: '12sp'
		        text: 'Z-Position'
		    Label:
		        size_hint_y: None
		        height: '15dp'
				halign: 'center'
		        font_size: '12sp'
		        text: 'Current (um)'
		    TextInput:
				id: get_position_id
            	multiline: False
		        size_hint_y: None
		        height: '30dp'
		        font_size: '12sp'
				halign: 'center'
		        disabled: True
			Label:
	BoxLayout:
	    orientation: 'horizontal'
	    size_hint_y: None
	    height: '30dp'
		spacing: '5dp'
		Button:
			text: 'Set Bookmark'
			font_size: '12sp'
			on_press: root.set_bookmark()
		Button:
			text: 'Go to Bookmark'
			font_size: '12sp'
			on_press: root.goto_bookmark()
	ToggleButton:
		id: home_id
	    size_hint_y: None
	    height: '30dp'
		font_size: '12sp'
		text: 'Home'
		on_press: root.home()
	Button:
	    size_hint_y: None
	    height: '30dp'
		font_size: '12sp'
		text: 'Autofocus'
		on_press: root.autofocus()
	Label:
	    size_hint_y: None
	    height: '40dp'
		text: 'Z-Stack Stuff Here?'
	Label:

<XYStageControl>:
	orientation: 'vertical'
	padding: '5dp'
	spacing: '5dp'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos
	RelativeLayout:
		size_hint_y: None
		# pos_hint: {'center_x': 0.5, 'center_y': 0.5}
		height: '250dp'

		ToggleButton: # HOME STAGE
			id: home_id
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '80dp', '80dp'
			pos_hint: {'center_x': 0.8, 'center_y': 0.8}
	        font_size: '12sp'
	        text: 'Home Stage'
			on_press: root.home()


	    Button: # COURSE BACK
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '30dp', '40dp'
			pos_hint: {'center_x': 0.5, 'center_y': 0.85}
			background_normal: './data/UU_normal.png'
			background_down: './data/UU_down.png'
			on_press: root.course_back()
	    Button: # FINE BACK
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '30dp', '30dp'
			pos_hint: {'center_x': 0.5, 'center_y': 0.65}
			background_normal: './data/U_normal.png'
			background_down: './data/U_down.png'
			on_press: root.fine_back()
	    Button: # FINE FORWARD
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '30dp', '30dp'
			pos_hint: {'center_x': 0.5, 'center_y': 0.35}
			background_normal: './data/D_normal.png'
			background_down: './data/D_down.png'
			on_press: root.fine_fwd()
	    Button: # COURSE FORWARD
	        id: fast_down
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '30dp', '40dp'
			pos_hint: {'center_x': 0.5, 'center_y': 0.15}
			background_normal: './data/DD_normal.png'
			background_down: './data/DD_down.png'
			on_press: root.course_fwd()


	    Button: # COURSE LEFT
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '40dp', '30dp'
			pos_hint: {'center_x': 0.2, 'center_y': 0.5}
			background_normal: './data/LL_normal.png'
			background_down: './data/LL_down.png'
			on_press: root.course_left()
	    Button: # FINE LEFT
	        id: slow_up
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '30dp', '30dp'
			pos_hint: {'center_x': 0.35, 'center_y': 0.5}
			background_normal: './data/L_normal.png'
			background_down: './data/L_down.png'
			on_press: root.fine_left()
	    Button: # FINE RIGHT
	        id: slow_down
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '30dp', '30dp'
			pos_hint: {'center_x': 0.65, 'center_y': 0.5}
			background_normal: './data/R_normal.png'
			background_down: './data/R_down.png'
			on_press: root.fine_right()
	    Button: # COURSE RIGHT
	        id: fast_down
			border: 0, 0, 0, 0
	        size_hint: None, None
	        size: '40dp', '30dp'
			pos_hint: {'center_x': 0.8, 'center_y': 0.5}
			background_normal: './data/RR_normal.png'
			background_down: './data/RR_down.png'
			on_press: root.course_right()
	BoxLayout:
		orientation: 'horizontal'
		spacing: '5dp'
		size_hint_y: None
		height: '30dp'
		Label:
	        height: '30dp'
	        font_size: '12sp'
			text: 'X: (mm)'
		TextInput:
			id: x_pos_id
        	multiline: False
	        size_hint_y: None
	        height: '30dp'
	        font_size: '12sp'
			halign: 'center'
        	input_filter: 'float'
	        text: ''
            on_text_validate: root.set_xposition(self.text)
		Label:
	        height: '30dp'
	        font_size: '12sp'
			text: 'Y: (mm)'
		TextInput:
			id: y_pos_id
        	multiline: False
	        size_hint_y: None
	        height: '30dp'
	        font_size: '12sp'
			halign: 'center'
        	input_filter: 'float'
	        text: ''
            on_text_validate: root.set_yposition(self.text)
	BoxLayout:
		orientation: 'horizontal'
		spacing: '5dp'
		size_hint_y: None
		height: '30dp'
		Button:
	        height: '30dp'
	        font_size: '12sp'
			text: 'Set X'
			on_press: root.set_xbookmark()
		Button:
	        height: '30dp'
	        font_size: '12sp'
	        text: 'Go to X'
			on_press: root.goto_xbookmark()
		Button:
	        height: '30dp'
	        font_size: '12sp'
			text: 'Set Y'
			on_press: root.set_ybookmark()
		Button:
	        height: '30dp'
	        font_size: '12sp'
	        text: 'Go to Y'
			on_press: root.goto_ybookmark()
	Label:

# MainSettings - view and edit control accordian
# ------------------------------------------
<MainSettings>:
    orientation: 'horizontal'
    ToggleButton:
        id: toggle_mainsettings
        size_hint: None, None
        size: 30, 60
        pos_hint: {"x":0, "y":0.5}
        border: 0, 0, 0, 0
        background_normal: './data/left_arrow_left_arc.png' # left pointing (press to open)
        background_down: './data/right_arrow_left_arc.png' # right pointing (press to close)
        on_press: root.toggle_settings()

    Accordion:
        orientation: 'vertical'
        id: accordion_id
        # MICROSCOPE SETTINGS
        AccordionItem:
            title: 'Microscope Settings'
            collapse: False
			on_collapse: root.accordion_collapse('microscope')
            MicroscopeSettings:
                id: microscope_settings_id

        # BRIGHTFIELD SETTINGS
        AccordionItem:
            title: 'Brightfield Channel Control'
			on_collapse: root.accordion_collapse('BF')
            LayerControl:
                id: BF
                layer: 'BF'
                bg_color: 0.3, 0.3, 0.3,  1

        # BLUE SETTINGS
        AccordionItem:
            title: 'Blue Channel Control'
			on_collapse: root.accordion_collapse('Blue')
            LayerControl:
                id: Blue
                layer: 'Blue'
                bg_color: 0, .5, 1, 1

        # GREEN SETTINGS
        AccordionItem:
            title: 'Green Channel Control'
			on_collapse: root.accordion_collapse('Green')
            LayerControl:
                id: Green
                layer: 'Green'
                bg_color: .2, 0.8, 0.2, 1

        # RED SETTINGS
        AccordionItem:
            title: 'Red Channel Control'
			on_collapse: root.accordion_collapse('Red')
            LayerControl:
                id: Red
                layer: 'Red'
                bg_color: 1, 0.2, 0, 1

        # TIME LAPSE SETTINGS
        AccordionItem:
            title: 'Time Lapse Protocol'
			on_collapse: root.accordion_collapse('protocol')
            TimeLapseSettings:
                id: time_lapse_id

# MicroscopeDropDown - Drop down list for microscope selection
# Used within ScopeSelection
# ------------------------------------------------------------
<MicroscopeDropDown>:
	Button:
		text: 'LS460'
		font_size: '12sp'
		size_hint_y: None
		height: '30dp'
		on_release: root.select('LS460')
	Button:
		text: 'LS560'
		font_size: '12sp'
		size_hint_y: None
		height: '30dp'
		on_release: root.select('LS560')
	Button:
		text: 'LS620'
		font_size: '12sp'
		size_hint_y: None
		height: '30dp'
		on_release: root.select('LS620')
	Button:
		text: 'LS720'
		font_size: '12sp'
		size_hint_y: None
		height: '30dp'
		on_release: root.select('LS720')

# ObjectiveDropDown - Drop down list for objective selection
# Used within ScopeSelection
# ----------------------------------------------------------
<ObjectiveDropDown>:
	Button:
		text: 'Objective A'
		font_size: '12sp'
		size_hint_y: None
		height: '30dp'
		on_release: root.select('Objective A')
	Button:
		text: 'Objective B'
		font_size: '12sp'
		size_hint_y: None
		height: '30dp'
		on_release: root.select('Objective B')
	Button:
		text: 'Objective C'
		font_size: '12sp'
		size_hint_y: None
		height: '30dp'
		on_release: root.select('Objective C')

# MicroscopeSettings - Settings for  Microscope within MainSettings
# ------------------------------------------
<MicroscopeSettings>:
    padding: '5dp'
    spacing: '5dp'
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos

	ScopeSelect:
		id: select_scope_btn
		orientation: 'horizontal'
		size_hint_y: None
		height: '30dp'

	ObjectiveSelect:
		id: select_obj_btn
		orientation: 'horizontal'
		size_hint_y: None
		height: '30dp'

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Magnification'
            size_hint_x: None
            width: '150dp'
			font_size: '12sp'
        TextInput:
            id: magnification_id
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'center'
            input_filter: 'int'
            text: '40'
			disabled: True
			font_size: '12sp'

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Field of View'
            size_hint_x: None
            width: '150dp'
			font_size: '12sp'
        TextInput:
            id: FOV_id
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'center'
            # input_filter: 'int'
            text: 'tbd'
			disabled: True
			font_size: '12sp'

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Frame Size'
            size_hint_x: None
            width: '150dp'
			font_size: '12sp'
        TextInput:
            id: frame_width
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'center'
            input_filter: 'int'
            text: '2592'
            on_text_validate: root.frame_size()
			font_size: '12sp'
        Label:
            text: 'x'
            size_hint_x: None
            width: '15dp'
			font_size: '12sp'
			halign: 'center'
        TextInput:
            id: frame_height
            multiline: False
            padding: ['5dp', (self.height-self.line_height)/2]
            halign: 'center'
            input_filter: 'int'
            text: '1944'
            on_text_validate: root.frame_size()
			font_size: '12sp'
    Image:
        id: image_of_microscope
        source: './data/scopes/LS620.png'



# LayerControl - Settings for Layers within MainSettings
# ------------------------------------------
<LayerControl>:
    padding: '5dp'
    spacing: '5dp'
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos

    BoxLayout:
        orientation: 'vertical'
        spacing: '5dp'
        # Illumination
        BoxLayout:
            orientation: 'horizontal'
        	size_hint_y: None
			height: '30dp'
            Label:
                text: 'Illumination (mA)'
                halign: 'left'
                valign: 'middle'
                font_size: '12sp'
                size_hint_x: None
                width: '100dp'
            ModSlider:
                id: ill_slider
                min: 0.
                max: 600.
                value: 100.
				step: 5.
                cursor_size: '20dp','20dp'
                cursor_image: './data/slider_cursor.png'
                value_track: True
                value_track_color: root.bg_color
                value_track_width: 5
                on_release: root.ill_slider()
            TextInput:
                id: ill_text
                size_hint_x: None
                width: '45dp'
                multiline: False
                font_size: '12sp'
                padding: ['4dp', (self.height-self.line_height)/2]
                halign: 'right'
                input_filter: 'float'
                text: format(ill_slider.value, '.3g')
                on_text_validate: root.ill_text()
        # Gain
        BoxLayout:
            orientation: 'horizontal'
        	size_hint_y: None
			height: '30dp'
            Label:
                text: 'Gain (dB)'
                halign: 'left'
                valign: 'middle'
                font_size: '12sp'
                size_hint_x: None
                width: '70dp'
            CheckBox:
                id: gain_auto
                size_hint_x: None
                width: '30dp'
                active: False
                on_release: root.gain_auto()
            ModSlider:
                id: gain_slider # 0 to 24, default 0, based on camera limits
                min: 0.
                max: 24.
                value: 0.
				step: 0.1
                cursor_size: '20dp','20dp'
                cursor_image: './data/slider_cursor.png'
                value_track: True
                value_track_color: root.bg_color
                value_track_width: 5
                on_release: root.gain_slider()
            TextInput:
                id: gain_text
                size_hint_x: None
                width: '45dp'
                multiline: False
                font_size: '12sp'
                padding: ['4dp', (self.height-self.line_height)/2]
                halign: 'right'
                input_filter: 'float'
                text: format(gain_slider.value, '.3g')
                on_text_validate: root.gain_text()
        # Exposure
        BoxLayout:
            orientation: 'horizontal'
        	size_hint_y: None
			height: '30dp'
            Label:
                text: 'Exposure (ms)'
                halign: 'left'
                valign: 'middle'
                font_size: '12sp'
                size_hint_x: None
                width: '100dp'
            ModSlider:
                id: exp_slider
                min: 0.01
                max: 1000. # values are in ms
                value: 100.
				step: 0.01
				# # This was to create a log scale
                # min: -2. # minimum allowable by camera 10.0 us = 0.01 ms -> 10^-2 log-10 scale
                # max: 3. # maximum, allowable by camera 1000000.0 us = 1000.0 ms -> 10^3 -> 10^-2 log-10 scale
                # value: 2. # 10^2 -> 100 ms exposure
				# step: 0.01
                cursor_size: '20dp','20dp'
                cursor_image: './data/slider_cursor.png'
				track_width: 5
				value_track: True
                value_track_color: root.bg_color
                value_track_width: 5
                on_release: root.exp_slider()
            TextInput:
                id: exp_text
                size_hint_x: None
                width: '45dp'
                multiline: False
                font_size: '12sp'
                padding: ['4dp', (self.height-self.line_height)/2]
                halign: 'right'
                input_filter: 'float'
                text: format(exp_slider.value, '.4g')
                # text: format(10 ** exp_slider.value, '.3g')
                on_text_validate: root.exp_text()

        # bulk settings
        BoxLayout:
            orientation: 'horizontal'
        	size_hint_y: None
			height: '30dp'
            Label:
                id: false_color_label
				font_size: '12sp'
                text: 'LED'
                halign: 'left'
                valign: 'middle'
			BoxLayout:
				orientation: 'vertical'
				Label:
	            ToggleButton:
	                id: apply_btn
					size_hint: None, None
					size: '33dp', '20dp'
					border: 0, 0, 0, 0
					background_normal: './data/ToggleL.png'
					background_down: './data/ToggleR.png'
	                on_release: root.apply_settings()
				Label:
            Label:
                id: false_color_label
				font_size: '12sp'
                text: 'Colorize'
                halign: 'center'
                valign: 'middle'
            CheckBox:
                id: false_color
                size_hint_x: None
                width: '30dp'
                active: True
                on_release: root.false_color()
            Label:
                text: 'Acquire'
				font_size: '12sp'
                halign: 'center'
                valign: 'middle'
            CheckBox:
                id: acquire
                size_hint_x: None
                width: '30dp'
                active: True
                on_release: root.update_acquire()
		# Focus Settings
        BoxLayout:
            orientation: 'horizontal'
        	size_hint_y: None
			height: '30dp'
			spacing: '5dp'
			Button:
	        	size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				text: 'Save Focus'
				on_press: root.save_focus()
			Button:
	        	size_hint_y: None
				height: '30dp'
				font_size: '12sp'
				text: 'Go to Focus'
				on_press: root.goto_focus()
        # File Save Settings
        # BoxLayout:
        #     orientation: 'horizontal'
        # 	size_hint_y: None
		# 	height: '40dp'
        Button:
            id: folder_btn
        	size_hint_y: None
			height: '30dp'
			font_size: '12sp'
            text: 'Folder'
            on_press: root.choose_folder()
        TextInput:
            id: root_text
        	size_hint_y: None
			height: '30dp'
			font_size: '12sp'
            multiline: False
            text: 'File Root'
            padding: ['5dp', (self.height-self.line_height)/2]
            on_text: root.root_text()

		Histogram:
			id: histo_id
			bg_color: root.bg_color
			padding: '5dp'
			size_hint_y: None
			height: '128dp'
			# on_touch_move: root.on_touch_move()
		Label:

<Histogram>:
	canvas:
		Color:
			rgba: root.bg_color
		Line:
			width: 1
			rectangle: (self.x+5, self.y+5, self.width-10, self.height-10)

# TimeLapseSettings - Settings for Time Lapse within MainSettings
# ------------------------------------------
<TimeLapseSettings>:
    padding: 5
    spacing: 5
    orientation: 'vertical'
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.7
        Rectangle:
            size: self.size
            pos: self.pos

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Capture Period'
            size_hint_x: None
            width: '130dp'
			font_size: '12sp'
        TextInput:
            id: capture_period
            multiline: False
		    size_hint_y: None
		    height: '30dp'
            font_size: '12sp'
            padding: ['4dp', (self.height-self.line_height)/2]
            halign: 'right'
            input_filter: 'float'
            text: format(5, '.3g')
            on_text_validate: root.update_period()
        Label:
            text: 'min'
            size_hint_x: None
            width: '60dp'
			font_size: '12sp'

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '30dp'
        Label:
            text: 'Capture Duration'
            size_hint_x: None
            width: '130dp'
			font_size: '12sp'
        TextInput:
            id: capture_dur
            multiline: False
	        size_hint_y: None
	        height: '30dp'
            font_size: '12sp'
            padding: ['4dp', (self.height-self.line_height)/2]
            halign: 'right'
            input_filter: 'float'
            text: format(48, '.3g')
            on_text_validate: root.update_duration()
        Label:
            text: 'hrs'
            size_hint_x: None
            width: '60dp'
			font_size: '12sp'
	# BoxLayout:
	# 	orientation: 'horizontal'
    #     size_hint_y: None
    #     height: '30dp'
	# 	spacing: '5dp'
    Button:
        text: 'Load Protocol'
        size_hint_y: None
        height: '30dp'
		font_size: '12sp'
        on_press: root.load_protocol()
    Button:
        text: 'Save Protocol'
        size_hint_y: None
        height: '30dp'
		font_size: '12sp'
        on_press: root.save_protocol()
    ToggleButton:
        id: protocol_btn
        text: 'Run Protocol'
        size_hint_y: None
        height: '30dp'
		font_size: '12sp'
        on_press: root.run_protocol()
    # Button:
    #     id: movie_btn
    #     size_hint_y: None
    #     height: 40
    #     text: 'Convert to AVI'
    #     on_release: root.convert_to_avi()
    Label:

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
			path: root.path
        BoxLayout:
            size_hint_y: None
            height: '30dp'
            Button:
                text: "Cancel"
				font_size: '12sp'
                on_release: root.cancel()
            Button:
                text: "Select"
				font_size: '12sp'
                on_release: root.load(filechooser.path)
